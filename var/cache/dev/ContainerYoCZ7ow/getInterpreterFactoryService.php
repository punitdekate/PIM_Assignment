<?php

namespace ContainerYoCZ7ow;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getInterpreterFactoryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\InterpreterFactory' shared autowired service.
     *
     * @return \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\InterpreterFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/InterpreterFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/Settings/SettingsAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/InterpreterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/AbstractInterpreter.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/CsvFileInterpreter.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/XlsxFileInterpreter.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/JsonFileInterpreter.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/DataSource/Interpreter/XmlFileInterpreter.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/data-importer/src/Queue/QueueService.php';

        $a = ($container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\DeltaChecker\\DeltaChecker'] ?? $container->load('getDeltaCheckerService'));

        if (isset($container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\InterpreterFactory'])) {
            return $container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\InterpreterFactory'];
        }
        $b = ($container->services['Pimcore\\Log\\ApplicationLogger'] ?? $container->load('getApplicationLoggerService'));

        if (isset($container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\InterpreterFactory'])) {
            return $container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\InterpreterFactory'];
        }
        $c = ($container->privates['Pimcore\\Bundle\\DataImporterBundle\\Queue\\QueueService'] ?? ($container->privates['Pimcore\\Bundle\\DataImporterBundle\\Queue\\QueueService'] = new \Pimcore\Bundle\DataImporterBundle\Queue\QueueService()));

        $d = new \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\CsvFileInterpreter($a, $c, $b);

        $e = ($container->services['monolog.logger.DATA-IMPORTER'] ?? $container->load('getMonolog_Logger_DATAIMPORTERService'));

        $d->setLogger($e);
        $f = new \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\XlsxFileInterpreter($a, $c, $b);
        $f->setLogger($e);
        $g = new \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\JsonFileInterpreter($a, $c, $b);
        $g->setLogger($e);
        $h = new \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\XmlFileInterpreter($a, $c, $b);
        $h->setLogger($e);

        return $container->privates['Pimcore\\Bundle\\DataImporterBundle\\DataSource\\Interpreter\\InterpreterFactory'] = new \Pimcore\Bundle\DataImporterBundle\DataSource\Interpreter\InterpreterFactory(['csv' => $d, 'xlsx' => $f, 'json' => $g, 'xml' => $h]);
    }
}
