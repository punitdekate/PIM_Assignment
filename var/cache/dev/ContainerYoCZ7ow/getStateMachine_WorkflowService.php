<?php

namespace ContainerYoCZ7ow;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getStateMachine_WorkflowService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'state_machine.workflow' shared autowired service.
     *
     * @return \Symfony\Component\Workflow\StateMachine
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/WorkflowInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/Workflow.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/StateMachine.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/Definition.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/Transition.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Notes/NotesAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Notification/NotificationInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Notes/NotesAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Notification/NotificationTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Transition.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/workflow/MarkingStore/MarkingStoreInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/MarkingStore/StateTableMarkingStore.php';

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->services['state_machine.workflow'])) {
            return $container->services['state_machine.workflow'];
        }

        return $container->services['state_machine.workflow'] = new \Symfony\Component\Workflow\StateMachine(new \Symfony\Component\Workflow\Definition([0 => 'base', 1 => 'features', 2 => 'set manufacturer and seller', 3 => 'media', 4 => 'content_prepared', 5 => 'accepted', 6 => 'reject'], [0 => new \Pimcore\Workflow\Transition('add_base_attributes', 'base', 'features', ['label' => 'set features', 'notes' => ['commentEnabled' => true, 'commentRequired' => true, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change']), 1 => new \Pimcore\Workflow\Transition('add_features', 'media', 'set manufacturer and seller', ['label' => 'set manufacturer and seller', 'notes' => ['commentEnabled' => true, 'commentRequired' => false, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change']), 2 => new \Pimcore\Workflow\Transition('add_mf_sl', 'features', 'media', ['label' => 'set media', 'notes' => ['commentEnabled' => true, 'commentRequired' => false, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change']), 3 => new \Pimcore\Workflow\Transition('add_media', 'set manufacturer and seller', 'content_prepared', ['label' => 'prepare', 'notes' => ['commentEnabled' => true, 'commentRequired' => false, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change']), 4 => new \Pimcore\Workflow\Transition('accept_transition', 'content_prepared', 'accepted', ['label' => 'accept', 'notes' => ['commentEnabled' => true, 'commentRequired' => false, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change']), 5 => new \Pimcore\Workflow\Transition('reject_transition', 'content_prepared', 'reject', ['label' => 'reject', 'notes' => ['commentEnabled' => true, 'commentRequired' => false, 'type' => 'Status update', 'additionalFields' => []], 'objectLayout' => false, 'notificationSettings' => [], 'changePublishedState' => 'no_change'])]), new \Pimcore\Workflow\MarkingStore\StateTableMarkingStore('workflow'), $a, 'workflow', NULL);
    }
}
